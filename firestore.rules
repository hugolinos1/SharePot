
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'hugues.rabier@gmail.com';
    }

    function isProjectParticipant(projectId) {
      let projectPath = /databases/$(database)/documents/projects/$(projectId);
      if (!exists(projectPath)) {
        return false;
      }
      let projectData = get(projectPath).data;
      return request.auth != null &&
             projectData != null &&
             (
               request.auth.uid == projectData.ownerId ||
               (projectData.members != null && projectData.members is list && request.auth.uid in projectData.members)
             );
    }

    match /users/{userId} {
      allow create: if request.auth != null &&
                       request.auth.uid == userId &&
                       request.resource.data.id == request.auth.uid;

      allow read: if request.auth != null;

      allow update: if isAdmin() ||
                       (request.auth.uid == userId &&
                        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['name', 'avatarUrl', 'avatarStoragePath', 'updatedAt']) &&
                        (!request.resource.data.keys().has('isAdmin') || request.resource.data.isAdmin == resource.data.isAdmin) &&
                        (request.resource.data.keys().has('isAdmin') == false || request.resource.data.isAdmin == false || resource.data.isAdmin == true) &&
                        (!request.resource.data.keys().has('updatedAt') || request.resource.data.updatedAt == request.time)
                       );

      allow delete: if isAdmin() && request.auth.uid != userId;
      allow list: if isAdmin();
    }

    match /projects/{projectId} {
      allow create: if request.auth != null &&
                       request.resource.data.ownerId == request.auth.uid &&
                       request.auth.uid in request.resource.data.members &&
                       request.resource.data.name is string && request.resource.data.name.size() > 0 &&
                       request.resource.data.status is string &&
                       request.resource.data.createdAt == request.time &&
                       request.resource.data.updatedAt == request.time &&
                       request.resource.data.lastActivity == request.time;

      allow read: if isAdmin() || isProjectParticipant(projectId);

      allow update: if request.auth != null && (
                        isAdmin() ||
                        (
                          request.auth.uid == resource.data.ownerId &&
                          request.resource.data.updatedAt == request.time &&
                          request.resource.data.ownerId == resource.data.ownerId &&
                          request.resource.data.createdAt == resource.data.createdAt
                        ) ||
                        ( 
                          request.auth.uid != null &&
                          request.auth.uid != resource.data.ownerId &&
                          (resource.data.members == null || (resource.data.members is list && !(request.auth.uid in resource.data.members))) &&
                          request.resource.data.keys().hasOnly(['members', 'updatedAt']) &&
                          request.resource.data.updatedAt == request.time &&
                          (
                            !request.resource.data.keys().has('name') ||
                            request.resource.data.name == resource.data.name
                          ) &&
                          (
                            !request.resource.data.keys().has('description') ||
                            request.resource.data.description == resource.data.description
                          ) &&
                          (
                            !request.resource.data.keys().has('status') ||
                            request.resource.data.status == resource.data.status
                          ) &&
                          (
                            !request.resource.data.keys().has('budget') ||
                            request.resource.data.budget == resource.data.budget
                          ) &&
                          (
                            !request.resource.data.keys().has('ownerId') ||
                            request.resource.data.ownerId == resource.data.ownerId
                          ) &&
                          (
                            !request.resource.data.keys().has('createdAt') ||
                            request.resource.data.createdAt == resource.data.createdAt
                          ) &&
                          (
                            !request.resource.data.keys().has('tags') ||
                            request.resource.data.tags == resource.data.tags
                          ) &&
                          (
                            !request.resource.data.keys().has('notes') ||
                            request.resource.data.notes == resource.data.notes
                          )
                        ) ||
                        (
                          isProjectParticipant(projectId) &&
                          request.auth.uid != resource.data.ownerId && 
                          request.resource.data.updatedAt == request.time &&
                          request.resource.data.lastActivity == request.time &&
                          (request.resource.data.keys().has('name') == false || request.resource.data.name == resource.data.name) &&
                          (request.resource.data.keys().has('description') == false || request.resource.data.description == resource.data.description) &&
                          (request.resource.data.keys().has('status') == false || request.resource.data.status == resource.data.status) &&
                          (request.resource.data.keys().has('budget') == false || request.resource.data.budget == resource.data.budget) &&
                          (request.resource.data.keys().has('ownerId') == false || request.resource.data.ownerId == resource.data.ownerId) &&
                          (request.resource.data.keys().has('createdAt') == false || request.resource.data.createdAt == resource.data.createdAt) &&
                          (request.resource.data.keys().has('members') == false || request.resource.data.members == resource.data.members) &&
                          (request.resource.data.keys().has('tags') == false || request.resource.data.tags == resource.data.tags) &&
                          (request.resource.data.keys().has('notes') == false || request.resource.data.notes == resource.data.notes)
                        )
                      );

      allow delete: if isAdmin() || (request.auth.uid == resource.data.ownerId);
      allow list: if request.auth != null;
    }

    match /expenses/{expenseId} {
      allow create: if request.auth != null &&
                       isProjectParticipant(request.resource.data.projectId) &&
                       request.resource.data.amount is number &&
                       request.resource.data.currency is string &&
                       request.resource.data.projectId is string &&
                       request.resource.data.paidById is string &&
                       request.resource.data.expenseDate is timestamp &&
                       request.resource.data.createdBy == request.auth.uid &&
                       request.resource.data.createdAt == request.time &&
                       request.resource.data.updatedAt == request.time;

      allow read: if isAdmin() || isProjectParticipant(resource.data.projectId);

      allow update: if request.auth != null && (
                        isAdmin() ||
                        (
                          isProjectParticipant(resource.data.projectId) &&
                          request.auth.uid == resource.data.createdBy &&
                          request.resource.data.updatedAt == request.time &&
                          request.resource.data.createdBy == resource.data.createdBy &&
                          request.resource.data.projectId == resource.data.projectId
                        )
                      );

      allow delete: if isAdmin() ||
                       (isProjectParticipant(resource.data.projectId) && request.auth.uid == resource.data.createdBy);

      allow list: if request.auth != null;
    }
  }
}
