
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Règles pour le chemin des justificatifs
    match /receipts/{projectId}/{expenseId}/{fileName} {
      // TEST: Autoriser la création si l'utilisateur est authentifié et que les contraintes de base du fichier sont respectées.
      // CETTE RÈGLE EST TRÈS PERMISSIVE POUR LE TEST UNIQUEMENT.
      allow create: if request.auth != null &&
                       request.resource.size < 5 * 1024 * 1024 && // Moins de 5MB
                       request.resource.contentType.matches('image/.*'); // Doit être une image

      // Lecture : Seuls les participants au projet peuvent lire
      allow read: if request.auth != null &&
                     (
                       exists(/databases/$(database)/documents/projects/$(projectId)) &&
                       (
                         request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerId ||
                         request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.members
                       )
                     );

      // Suppression : Le créateur de la dépense ou le propriétaire du projet peuvent supprimer
      allow delete: if request.auth != null &&
                       exists(/databases/$(database)/documents/expenses/$(expenseId)) &&
                       get(/databases/$(database)/documents/expenses/$(expenseId)).data.projectId == projectId &&
                       (
                         request.auth.uid == get(/databases/$(database)/documents/expenses/$(expenseId)).data.createdBy ||
                         (
                           exists(/databases/$(database)/documents/projects/$(projectId)) &&
                           request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerId
                         )
                       );
    }

    // Vous pouvez ajouter d'autres règles pour d'autres chemins ici, par exemple pour les avatars utilisateurs
    // match /userAvatars/{userId}/{fileName} {
    //   allow read: if true; // Ouvert à la lecture si les avatars sont publics
    //   allow write: if request.auth != null && request.auth.uid == userId;
    // }

    // Règle par défaut plus restrictive pour tous les autres chemins (sécurité par défaut)
    // Commentez ou supprimez cette règle si vous voulez que tout soit interdit par défaut
    // et définissez explicitement les permissions pour chaque chemin.
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
