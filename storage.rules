
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // function isProjectParticipant(projectId) { // Commented out, not used in current simplified rules
    //   let projectPath = /databases/$(database)/documents/projects/$(projectId);
    //   return exists(projectPath) &&
    //          (
    //            request.auth.uid == get(projectPath).data.ownerId ||
    //            request.auth.uid in get(projectPath).data.members
    //          );
    // }

    // Receipts path: receipts/{projectId}/{expenseId}/{fileName}
    // match /receipts/{projectId}/{expenseId}/{fileName} { // Commented out as functionality is removed
      // Allow create (upload) if:
      // 1. User is authenticated.
      // 2. File is an image.
      // 3. File size is less than 5MB.
      // 4. User is a participant (owner or member) of the project.
      // allow create: if request.auth != null &&
      //                  request.resource.size < 5 * 1024 * 1024 &&
      //                  request.resource.contentType.matches('image/.*') &&
      //                  (
      //                    exists(/databases/$(database)/documents/projects/$(projectId)) &&
      //                    (
      //                      request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerId ||
      //                      request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.members
      //                    )
      //                  );

      // Allow read if:
      // 1. User is authenticated.
      // 2. User is a participant (owner or member) of the project.
      // allow read: if request.auth != null &&
      //                (
      //                  exists(/databases/$(database)/documents/projects/$(projectId)) &&
      //                  (
      //                    request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerId ||
      //                    request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.members
      //                  )
      //                );

      // Allow delete if:
      // 1. User is authenticated.
      // 2. The corresponding expense document exists in Firestore and belongs to the same project.
      // 3. User is the creator of the expense OR the owner of the project.
    //   allow delete: if request.auth != null &&
    //                    exists(/databases/$(database)/documents/expenses/$(expenseId)) &&
    //                    get(/databases/$(database)/documents/expenses/$(expenseId)).data.projectId == projectId &&
    //                    (
    //                      request.auth.uid == get(/databases/$(database)/documents/expenses/$(expenseId)).data.createdBy ||
    //                      (
    //                        exists(/databases/$(database)/documents/projects/$(projectId)) &&
    //                        request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerId
    //                      )
    //                    );
    // }

    // Default deny all other paths if not explicitly matched
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
